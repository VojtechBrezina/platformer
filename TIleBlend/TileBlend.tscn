[gd_scene load_steps=4 format=2]

[ext_resource path="res://tiles.tres" type="TileSet" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float x_offset;
uniform float x_scale;
uniform float y_offset;
uniform float y_scale;

void fragment() {
	float alpha_x = (mod(UV.x / TEXTURE_PIXEL_SIZE.x, 72.0) / 70.0) * x_scale + x_offset;
	float alpha_y = (mod(UV.y / TEXTURE_PIXEL_SIZE.y, 72.0) / 70.0) * y_scale + y_offset;
	COLOR = vec4(
		textureLod(TEXTURE, UV, 0.0).rgb,
		textureLod(TEXTURE, UV, 0.0).a * min(1.0, max(0.0, alpha_x + alpha_y))
	);
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/x_offset = 0.0
shader_param/x_scale = 0.0
shader_param/y_offset = 0.0
shader_param/y_scale = 1.0

[node name="TileBlend" type="TileMap"]
material = SubResource( 2 )
tile_set = ExtResource( 1 )
cell_size = Vector2( 70, 70 )
collision_layer = 0
collision_mask = 0
format = 1
